<?xml version="1.0" encoding="UTF-8"?>
<project name="ADC Sample" version="2.6.0.132">
    <desc><![CDATA[Demonstrates ADC sampling of the SFH5711 light sensor on the SmartRF06 Evaluation Board.

If the ADC value varies more than the configured change mask, then it wakes up the MCU.]]></desc>
    <pattr name="Apply default power mode">0</pattr>
    <pattr name="Board">CC1310 LaunchPad</pattr>
    <pattr name="Chip name">CC2640R2F</pattr>
    <pattr name="Chip package">QFN48 7x7 RGZ</pattr>
    <pattr name="Chip revision">-</pattr>
    <pattr name="Clock in active mode">0</pattr>
    <pattr name="Code prefix"></pattr>
    <pattr name="Default power mode">0</pattr>
    <pattr name="Operating system">TI-RTOS</pattr>
    <pattr name="Output directory">./</pattr>
    <pattr name="RTC tick interval (16.16 format)">2000</pattr>
    <pattr name="Run-time logging UART RX pin">DIO1</pattr>
    <pattr name="Run-time logging UART TX pin"></pattr>
    <task name="ADC Sample">
        <desc><![CDATA[Samples the SFH5711 light sensor on the SmartRF06 Evaluation Board.

The ADC value range (0-4095) is divided into a configurable number of bins, with run-time configurable hysteresis and bin thresholds. The application must set the first threshold to 0, and the last threshold to 4095.

An ALERT interrupt is generated to the System CPU application when the ADC value changes from one bin to another.]]></desc>
        <tattr name="BIN_COUNT" desc="Number of ADC value bins" type="dec" content="const" scope="task" min="0" max="65535">5</tattr>
        <tattr name="SENSOR_OUTPUT_COUNT" type="expr" content="const" scope="task" min="0" max="65535">5</tattr>
        <tattr name="THRESHOLD_COUNT" desc="Number of bin thresholds" type="expr" content="const" scope="task" min="0" max="65535">BIN_COUNT + 1</tattr>
        <tattr name="cfg.changeMask" type="dec" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="cfg.minReportInterval" type="dec" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="cfg.pAuxioASensorOutput" size="SENSOR_OUTPUT_COUNT" type="expr" content="struct_array" scope="task" min="0" max="65535">0</tattr>
        <tattr name="output.adcValue" type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="output.pAdcValue" size="SENSOR_OUTPUT_COUNT" type="expr" content="struct_array" scope="task" min="0" max="65535">0</tattr>
        <tattr name="state.oldAdcMaskedBits" type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="state.samplesSinceLastReport" desc="The number of samples since last report was sent" type="dec" content="struct" scope="task" min="0" max="65535">0</tattr>
        <resource_ref name="ADC" enabled="1"/>
        <resource_ref name="AON Domain Functionality" enabled="0"/>
        <resource_ref name="Accumulator-Based Math" enabled="0"/>
        <resource_ref name="Analog Open-Drain Pins" enabled="0"/>
        <resource_ref name="Analog Open-Source Pins" enabled="0"/>
        <resource_ref name="Analog Pins" enabled="1">
            <io_usage name="AD_INPUT" label="ADC input">
                <uattr name="Pin count">5</uattr>
                <uattr name="Pin/0000">DIO23</uattr>
                <uattr name="Pin/0001">DIO24</uattr>
                <uattr name="Pin/0002">DIO25</uattr>
                <uattr name="Pin/0003">DIO26</uattr>
                <uattr name="Pin/0004">DIO27</uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="COMPA" enabled="0"/>
        <resource_ref name="COMPA Event Trigger" enabled="0"/>
        <resource_ref name="COMPB" enabled="0"/>
        <resource_ref name="COMPB Event Trigger" enabled="0"/>
        <resource_ref name="Delay Insertion" enabled="0"/>
        <resource_ref name="Differential Output Pins" enabled="0"/>
        <resource_ref name="Digital Input Pins" enabled="0"/>
        <resource_ref name="Digital Open-Drain Pins" enabled="0"/>
        <resource_ref name="Digital Open-Source Pins" enabled="0"/>
        <resource_ref name="Digital Output Pins" enabled="0">
            <io_usage name="ALS_POWER" label="Light sensor power">
                <uattr name="Configuration on uninitialization">0</uattr>
                <uattr name="Output drive strength">0</uattr>
                <uattr name="Output value on initialization">0</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO26</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="Dynamic Power Control" enabled="0"/>
        <resource_ref name="GPIO Event Trigger" enabled="0"/>
        <resource_ref name="I2C Master" enabled="0">
            <rattr name="SCL frequency">400</rattr>
            <rattr name="SCL stretch timeout">1</rattr>
            <io_usage>
                <uattr name="SCL pin/0000"></uattr>
                <uattr name="SDA pin/0000"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="ISRC" enabled="0"/>
        <resource_ref name="LCD Controller" enabled="0">
            <rattr name="Waveform state count">8</rattr>
            <io_usage>
                <uattr name="Output drive strength">0</uattr>
                <uattr name="Pin count">20</uattr>
                <uattr name="Pin/0000"></uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="Math and Logic" enabled="0"/>
        <resource_ref name="Multi-Buffered Output Data Exchange" enabled="0">
            <rattr name="Buffer count">10</rattr>
            <rattr name="Indicate overflow at buffer check">1</rattr>
            <rattr name="Indicate overflow at buffer switch">0</rattr>
            <rattr name="Prevent overflow at buffer switch">1</rattr>
        </resource_ref>
        <resource_ref name="Peripheral Sharing" enabled="0"/>
        <resource_ref name="Pulse Counter" enabled="0"/>
        <resource_ref name="RTC Multi-Event Capture" enabled="0"/>
        <resource_ref name="RTC-Based Execution Scheduling" enabled="1"/>
        <resource_ref name="Reference DAC" enabled="0"/>
        <resource_ref name="Run-Time Logging" enabled="0"/>
        <resource_ref name="SPI Chip Select" enabled="0"/>
        <resource_ref name="SPI Data Transfer" enabled="0">
            <rattr name="Bit rate">0</rattr>
            <rattr name="MISO configuration when inactive">-1</rattr>
            <rattr name="MOSI configuration on initialization">0</rattr>
            <rattr name="MOSI configuration on uninitialization">0</rattr>
            <rattr name="SCLK configuration on initialization">0</rattr>
            <rattr name="SCLK configuration on uninitialization">0</rattr>
            <io_usage>
                <uattr name="MISO pin/0000"></uattr>
                <uattr name="MOSI pin/0000"></uattr>
                <uattr name="SCLK pin/0000"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="Signal Observation" enabled="0"/>
        <resource_ref name="System CPU Alert" enabled="1"/>
        <resource_ref name="System Event Trigger" enabled="0"/>
        <resource_ref name="TDC" enabled="0"/>
        <resource_ref name="Timer 0" enabled="0"/>
        <resource_ref name="Timer 0 Event Trigger" enabled="0"/>
        <resource_ref name="Timer 1" enabled="0"/>
        <resource_ref name="Timer 1 Event Trigger" enabled="0"/>
        <resource_ref name="Timer 2" enabled="0"/>
        <resource_ref name="Timer 2 Event Trigger" enabled="0"/>
        <resource_ref name="UART Emulator" enabled="0">
            <rattr name="RX buffer size">64</rattr>
            <rattr name="Required idle period before enabling RX">11</rattr>
            <rattr name="TX buffer size">64</rattr>
            <io_usage>
                <uattr name="RX pin/0000"></uattr>
                <uattr name="TX pin/0000"></uattr>
            </io_usage>
        </resource_ref>
        <sccode name="event0" init_power_mode="0"><![CDATA[]]></sccode>
        <sccode name="event1" init_power_mode="0"><![CDATA[]]></sccode>
        <sccode name="event2" init_power_mode="0"><![CDATA[]]></sccode>
        <sccode name="event3" init_power_mode="0"><![CDATA[]]></sccode>
        <sccode name="execute" init_power_mode="0"><![CDATA[// Enable the ADC (fixed reference, 2.7 us sample time, manual trigger)


// For each pin (with one entry per pin in cfg.pAdcValue[] and output.pAdcValue[]) ...
for (U16 n = 0; n < SENSOR_OUTPUT_COUNT; n++) {

    adcEnableSync(ADC_REF_FIXED, ADC_SAMPLE_TIME_5P46_MS, ADC_TRIGGER_MANUAL);

    // Select ADC input
    adcSelectGpioInput(cfg.pAuxioAAdInput[n]);

    // Sample the pin and store the ADC value
    adcGenManualTrigger();
    adcReadFifo(output.pAdcValue[n]);


    output.adcValue=output.pAdcValue[n];

    //    adcDisable();

    // Disable the ADC
    // Alert the driver if outside of change mask
    U16 adcMaskedBits = output.pAdcValue[n]& cfg.changeMask;
    if (adcMaskedBits != state.oldAdcMaskedBits) {
        //fwGenQuickAlertInterrupt();
        fwGenAlertInterrupt();
        state.samplesSinceLastReport = state.samplesSinceLastReport + 1;
        state.samplesSinceLastReport = 0;
    } else {
        state.samplesSinceLastReport = state.samplesSinceLastReport + 1;
    }

    //Alert driver if minimum report interval has expired
    if(cfg.minReportInterval != 0) {
        if(state.samplesSinceLastReport >= cfg.minReportInterval) {
            //fwGenQuickAlertInterrupt();
            fwGenAlertInterrupt();
            state.samplesSinceLastReport = 0;
        }
    }

    // Save old masked ADC value
    state.oldAdcMaskedBits = output.pAdcValue[n] & cfg.changeMask;

}
//adcDisable();
//fwGenAlertInterrupt();
fwScheduleTask(1);]]></sccode>
        <sccode name="initialize" init_power_mode="0"><![CDATA[// Select ADC input (A3 / DIO26)
//adcSelectGpioInput(4);

///might delete this
//adcSelectGpioInput(AUXIO_A_SENSOR_OUTPUT);

// Schedule the first execution

//cfg.pAuxioASensorOutput[0]=4;
//cfg.pAuxioASensorOutput[1]=7;

fwScheduleTask(1);]]></sccode>
        <sccode name="terminate" init_power_mode="0"><![CDATA[]]></sccode>
        <event_trigger active_count="1">0,1,2,3</event_trigger>
        <tt_iter>run_execute</tt_iter>
        <tt_struct>output.pAdcValue.[0]</tt_struct>
        <rtl_struct></rtl_struct>
        <rtl_task_sel en="1" struct_log_list="output,input"/>
        <tt_child_graph name="" parent_struct_member="cfg.changeMask" child_struct_member="cfg.changeMask" parent_array_index="-1" child_array_index="-1" scaling_factor="1" scaling_offset="0"/>
    </task>
</project>
